.icon {
  display: flex;
}

.icon-shapes {
  width: 1em;
  height: 1em;
  .stroke {
    fill: none;
    stroke: currentColor;
    stroke-width: 1.5;
    vector-effect: non-scaling-stroke;
    .edge({
      stroke-width: 8;
    });
  }
 .fill {
    fill: currentColor;
    stroke: none;
  }
}

.icon-loading {
  display: flex;
  font-size: @padding;
  animation: rotate (8 * @run) linear infinite;
  .stroke-circle {
    stroke-linecap: round;
    animation: (6 * @run) linear @now infinite loading;
  }
}

.flex {
  display: flex;
}

.content {
  width: 100%;
  max-width: (@tile_xxl + @padding + @padding);
  margin-left: auto;
  margin-right: auto;
  &:not(.bleed) {
    padding-left: @padding;
    padding-right: @padding;
  }
  &.bleed {
    //
  }
  &.tall {
    padding-top: (@tile * 2);
    padding-bottom: (@tile * 2);
  }
  &.small {
    max-width: ((@tile_xxl / 2) + @padding + @padding);
  }
}

.link {
  color: @white;
  text-decoration: none;
  &:hover {
    color: @gray_200;
  }
  &.fancy {
    margin-left: -2px;
    padding: 0 2px;
    background-image: linear-gradient(to bottom, @focus, @focus);
    background-size: 100% 1px;
    background-repeat: no-repeat;
    background-position: bottom;
    transition: background @run_fast @fadein;
    &:hover {
      color: @white;
      background-size: 100% 100%;
      border-radius: @border_radius;
    }
    &:active {
      transition-duration: @now;
      background-image: linear-gradient(
        to bottom,
        fade(@focus, 25),
        fade(@focus, 25)
      );
      border-radius: @border_radius;
    }
  }
}

.codeblock {
  display: block;
  padding: @padding;
  overflow: auto;
  background: fade(@black, 03);
  border: @border;
  border-radius: @border_radius;
}

.borderline {
  width: 100%;
  height: @border_width;
  border-bottom: @border;
}

.underline {
  border-top: @border;
  margin: @tile_xs 0 @margin;
  width: @tile;
  .768({
    margin-left: auto;
    margin-right: auto;
  });
}

.nowrap {
  white-space: nowrap;
  word-break: keep-all;
}

.edges {
  pointer-events: none;
  user-select: none;
  border-color: inherit;
  border-radius: inherit;
}

.edge {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: inherit;
  border-color: inherit;
}

.edge-top {
  display: flex;
  align-items: flex-start;
}

.edge-bottom {
  display: flex;
  align-items: flex-end;
}

.edge-top-left,
.edge-top-center,
.edge-top-right {
  height: 100%;
  border-top-width: @border_width;
  border-top-style: solid;
  border-top-color: inherit;
}

.edge-top-left {
  width: (@padding - @tile_xxs);
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
}

.edge-top-center {
  box-sizing: content-box;
  padding: 0 @tile_xxs;
}

.edge-top-right {
  flex: 1;
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.edge-bottom-left,
.edge-bottom-right {
  flex: 1;
  height: 100%;
  border-bottom-width: @border_width;
  border-bottom-style: solid;
  border-bottom-color: inherit;
}

.edge-bottom-left {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
  border-top-left-radius: inherit;
  border-bottom-left-radius: inherit;
}

.edge-bottom-center {
  //
}

.edge-bottom-right {
  border-top-right-radius: inherit;
  border-bottom-right-radius: inherit;
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.edge-left {
  border-left-width: @border_width;
  border-left-style: solid;
}

.edge-right {
  border-right-width: @border_width;
  border-right-style: solid;
}

.form {
  display: flex;
  flex-wrap: wrap;
  max-width: (@tile_xl * 2);
  margin: @margin 0;
}

.input {
  width: 100%;
  margin-bottom: @tile_xs;
}

.text-input {
  display: flex;
  flex-direction: column;
  position: relative;
  border-color: @border_color;
  &.focus {
    border-color: @focus;
    .text-input-label {
      color: @focus;
    }
    .text-input-hint {
      color: @focus;
    }
  }
  &.focus,
  &:not(.empty) {
    .edge-top-center {
      border: none;
    }
    .text-input-label {
      transform: translate(0, -50%) scale(.75);
      transition+: transform @run_fast @now;
    }
    .text-input-excess {
      display: none;
    }
  }
  &.radius {
    border-radius: @border_radius;
    &.half {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
      .512({
        border-radius: @border_radius;
      });
      + .half {
        border-top-right-radius: @border_radius;
        border-bottom-right-radius: @border_radius;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        .512({
          border-radius: @border_radius;
        });
      }
    }
  }
  &.round {
    border-radius: @tile;
    .edge-top-left {
      width: (@tile / 2);
    }
    &.focus,
    &:not(.empty) {
      .text-input-label {
        transform: translate((@tile_xs * .75), -50%) scale(.75);
      }
    }
  }
  &.loading {
    .text-input-cancel {
      display: none;
    }
  }
  &:not(.loading) {
    .text-input-loading {
      display: none;
    }
  }
  &.action {
    .text-input-input {
      padding-right: (@padding * 2);
    }
  }
  &.half {
    width: 50%;
    + .half {
      margin-left: -1px;
      .512({
        margin-left: 0;
      });
    }
    &.focus {
      z-index: @z_index_up;
    }
    .512({
      width: 100%;
    });
  }
}

.text-input-input {
  padding: (@padding - @tile_xxs) @padding;
  height: @tile;
  min-height: @tile;
  max-height: @tile_xl;
}

.text-input-area {
  height: (@tile * 2.5);
}

.text-input-label {
  color: @gray_400;
  display: flex;
  align-items: center;
  align-self: flex-start;
  line-height: 1;
  position: absolute;
  top: 0;
  max-width: 100%;
  margin-left: @margin;
  padding: @padding 0;
  overflow: hidden;
  white-space: nowrap;
  user-select: none;
  pointer-events: none;
  transition+: transform @run_slow @now;
  transform-origin: left;
}

.text-input-hint {
  color: @gray_400;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: (-@tile_xxs / 2);
  left: 50%;
  height: 100%;
  user-select: none;
  pointer-events: none;
  white-space: nowrap;
  transform: translate(-50%, 50%) scale(.75);
  &:not(:empty) {
    padding: 0 @tile_xxs;
  }
}

.text-input-excess {
  font-size: @font_tiny;
}

.text-input-cancel {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  right: 0;
  width: @tile;
  height: @tile;
  &:not(:hover) {
    opacity: .5;
  }
  path {
    animation: @run @bounce @now grow_in;
  }
}

.text-input-loading {
  color: @focus;
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  top: 0;
  right: 0;
  width: @tile;
  height: @tile;
}

.select-input {
  position: relative;
  border: @border;
  border-radius: @border_radius;
}

.select-input-input {
  width: 100%;
  height: @tile;
  padding-top: (@padding - @tile_xxs);
  padding-right: @padding;
  padding-bottom: (@padding - @tile_xxs);
  padding-left: @padding;
}

.select-input-dropdown {
  position: absolute;
  top: 0;
  right: 0;
  padding: @padding;
  user-select: none;
  pointer-events: none;
}

.buttons {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  margin: @margin 0;
  .512({
    width: 100%;
  });
  .button {
    .512({
      width: 100%;
    });
    + .link {
      margin-left: @tile;
      .512({
        margin: @tile_xs 0;
      });
    }
  }
}

.button {
  display: flex;
  align-items: center;
  justify-content: center;
  min-width: (@tile_xl * 0.8125);
  height: @tile;
  line-height: 1;
  padding: 0 @padding;
  border: @border;
  border-radius: @border_radius;
  white-space: nowrap;
  overflow: hidden;
  user-select: none;
  &:focus {
    text-decoration: underline;
  }
  &:hover,
  &:active {
    text-decoration: none;
  }
  &.dark {
    color: @black;
    background: @gray_100;
    &:hover {
      .mouse ({
        transform: translate3d(0, -2px, 0);
        background-color: @gray_50;
        box-shadow+: 0 1px @white inset;
        box-shadow+: 0 2px @gray_500;
      });
    }
    &:active {
      .mouse ({
        transform: translate3d(0, 0, 0);
        background-color: @gray_200;
        box-shadow+: 0 2px @gray_300 inset;
      });
    }
  }
  &.shadow {
    transition+: box-shadow @run @deform;
    &:hover {
      .mouse({
        box-shadow+: 0 8px 21px 0 fade(@black, 21);
        border-color: fadeout(@border_color, 21);
        background-image: linear-gradient(to bottom, fade(@black, 0), fade(@black, 2));
        transition-duration: @run_fast;
      });
    }
    &:active {
      .mouse({
        box-shadow+: 0 2px 8px 0 fade(@black, 21);
        border-color: fadeout(@border_color, 21);
        background-image: none;
        transition-duration: @now;
      });
    }
  }
  &.primary {
    color: @white;
    background-color: @primary;
    border-color: @primary;
    border: none;
    border-bottom: 1px solid darken(@primary, 8);
    box-shadow+: 0 0 fade(darken(@primary, 8), 0);
    &:hover {
      .mouse ({
        transform: translate3d(0, -2px, 0);
        background-color: lighten(@primary, 3);
        box-shadow+: 0 1px fade(@white, 21) inset;
        box-shadow+: 0 2px darken(@primary, 8);
      });
    }
    &:active {
      .mouse ({
        border-bottom: 1px solid fade(@white, 21);
        transform: translate3d(0, 0, 0);
        background-color: saturate(darken(@primary, 3), 5);
        box-shadow+: 0 2px darken(@primary, 5) inset;
      });
    }
  }
  &.link {
    border: none;
  }
}

.button-text {
  display: inherit;
  align-items: inherit;
  justify-content: inherit;
  width: 100%;
  height: @tile;
  pointer-events: none;
}

.markdown {
  width: 100%;
  margin-bottom: @tile;
  a {
    .link();
  }
  code {
    font-weight: inherit;
    white-space: nowrap;
    background: fade(@black, 03);
    border: @border;
    border-radius: @tile_xxs;
    padding: 0 @tile_xxs;
  }
  pre {
    code {
      display: block;
      white-space: pre-wrap;
      padding: @padding;
    }
  }
}

.overlay-active {
  overflow: hidden;
}

.overlay {
  // color: @black;
  // display: flex;
  // flex-direction: column;
  // position: fixed;
  // top: 0;
  // bottom: 0;
  // left: 0;
  // right: 0;
  // padding: @tile 0;
  // background: @white;
  // overflow-y: scroll;
  // > .content {
  //   &:only-of-type {
  //     margin-top: auto;
  //     margin-bottom: auto;
  //   }
  // }
}

.overlay {
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  // overflow-y: scroll;
  overflow: hidden;
  // &.rise {
  //   .overlay-background {
  //     animation: @run cubic-bezier(0.445, 0.05, 0.55, 0.95) @now backwards fade_in;
  //   }
  //   .overlay-foreground {
  //     animation: @run_slow cubic-bezier(.55, 0, .55, 1.44) @now backwards tile_in_b2t;
  //   }
  // }
  // &.bury {
  //   .overlay-background {
  //     animation: @run cubic-bezier(0.445, 0.05, 0.55, 0.95) @now forwards fade_out;
  //   }
  //   .overlay-foreground {
  //     animation: (@run_fast * 1.5) cubic-bezier(0.445, 0.05, 0.55, 0.95) (@run_fast / 2) forwards tile_out_t2b;
  //   }
  // }
  animation: @run_slow @now @fadein backwards fade_in;
  &.page {
    .overlay-background {
      left: auto;
      right: 0;
    }
    .overlay-foreground {
      margin-right: 0;
      // background: @white;
    }
  }
}

.overlay-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  // background: rgba(34, 34, 34, 0.95);
  // background: fade(@black, 85);
  background: @white;
  animation: @run @now @fadein backwards overlay;
  .512({
    // background: @background;
  });
}

.overlay-foreground {
  color: @gray_800;
  position: relative;
  min-height: 100%;
  .512({
    width: 100%;
    height: 100%;
  });
  .link {
    color: @focus;
    text-decoration: underline;
    &:hover {
      text-decoration: none;
    }
  }
}

}

.overlay-close {
  color: @black;
  font-size: (@tile / 2);
  display: flex;
  align-items: center;
  justify-content: center;
  position: fixed;
  top: 0;
  right: @tile_xs;
  width: @tile;
  height: @tile;
  cursor: pointer;
  animation: @run @soon @bounce backwards grow_in;
  &:not(:hover) {
    opacity: 0.21;
  }
  .icon {
    stroke-width: 3;
    stroke-linecap: round;
  }
}

// .overlay-modal {
//   width: (@tile_xs * 23); // 368px
//   height: (@tile_xs * 35.5); // 568px
//   border-radius: @border_radius;
//   overflow: hidden;
//   box-shadow: 0 13px 34px 0 fade(@black, 34);
//   .512({
//     width: 100%;
//     height: 100%;
//     border-radius: 0;
//     box-shadow: none;
//   });
// }
