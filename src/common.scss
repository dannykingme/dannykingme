// NOTE
// Do not write styles in this less file.
// This should only contain less-specific,
// functional elements. I.e., nothing in
// here should print out as actual styles.

// color

$black:    #000000;
$gray_50:  #FAFAFA;
$gray_100: #F5F5F5;
$gray_200: #EEEEEE;
$gray_300: #E0E0E0;
$gray_400: #BDBDBD;
$gray_500: #9E9E9E;
$gray_600: #757575;
$gray_700: #616161;
$gray_800: #424242;
$gray_900: #212121;
$white:    #ffffff;

$red:    #FD5750;
$orange: #FD8650;
$yellow: #FDE550;
$green:  #97FC4F;
$cyan:   #6CFCAF;
$blue:   #6DB6FC;
$purple: #9A57fC;
$pink:   #FD57E1;

$background: $black;
$primary: $white;
$focus: #069BFA;

// type

$font_sans: 'Roboto', sans-serif;
$font_mono: 'Roboto Mono', monospace;
$font_slab: 'Roboto Slab', serif;

$font_weight: normal;
$font_size: 16px;

$font_tiny: 13px;
$font_height: 1.5;
$font_color: $gray_800;
$font_family: $font_sans;

$font: $font_weight #{$font_size}/$font_height $font_family;
$code: $font_weight #{$font_tiny}/20px $font_mono;

// time

$now: 0.0ms;
$run: 250ms;
$run_faster: ($run / 10.0);
$run_fast:   ($run / 2.50);
$run_slow:   ($run * 1.50);
$run_slower: ($run * 2.00);
$sooner: $run_faster;
$soon:   $run_fast;
$late:   $run_slow;
$later:  $run_slower;

// timing

$fadein: cubic-bezier(0.445, 0.05, 0.55, 0.95);
$bounce: cubic-bezier(.55, 0, .55, 1.44);
$deform: cubic-bezier(0.39, 0.575, 0.565, 1);

// size

$tile:     (1rem  * 4);
$tile_xl:  ($tile * $tile);
$tile_xxl: ($tile * $tile * $tile);
$tile_xxs: ($tile * 0.0625);
$tile_xs:  ($tile * 0.25);

$padding: ($tile_xs * $font_height) + rem;
$margin: ($tile_xs * $font_height) + rem;

$z_index_up: 1;
$z_index_down: -1;

$border_width: 1px;
$border_style: solid;
$border_color: $gray_300;
$border_radius: $tile_xxs;
$border: $border_width $border_style $border_color;

$outline_width: 2px;
$outline_style: solid;
$outline_color: $focus;
$outline_offset: 1px;
$outline: $outline_color $outline_style $outline_width;

@mixin m2048 {
  @media screen and (max-width: (2048 - 1px)) {
    @content;
  }
}

@mixin m1600 {
  @media screen and (max-width: (1600 - 1px)) {
    @content;
  }
}

@mixin m1280 {
  @media screen and (max-width: (1280 - 1px)) {
    @content;
  }
}

@mixin m1024 {
  @media screen and (max-width: (1024 - 1px)) {
    @content;
  }
}

@mixin m768 {
  @media screen and (max-width: (768 - 1px)) {
    @content;
  }
}

@mixin s512 {
  @media screen and (max-width: (512 - 1px)) {
    @content;
  }
}

// .2048 ($rules) { @media screen and (max-width: (2048 - 1px)) { $rules(); } }

// .1600 ($rules) { @media screen and (max-width: (1600 - 1px)) { $rules(); } }

// .1280 ($rules) { @media screen and (max-width: (1280 - 1px)) { $rules(); } }

// .1024 ($rules) { @media screen and (max-width: (1024 - 1px)) { $rules(); } }

// .768  ($rules) { @media screen and (max-width:  (768 - 1px)) { $rules(); } }

// .512  ($rules) { @media screen and (max-width:  (512 - 1px)) { $rules(); } }

// .touch($rules) {
//   body.mobile & {
//     $rules();
//   }
// }

// .mouse($rules) {
//   body:not(.mobile) & {
//     $rules();
//   }
// }

// @function cascade($i, $s: $run_faster) {
//   while $i > 0 {
//     @include cascade(($i - 1), $s);
//     &:nth-of-type(#{$i}) {
//       animation-delay: $s * ($i - 1);
//     }
//   }
// }

//
// Animation sequence template
//

// @mixin animate_example_handler() {
//   @include animate_example_1();
//   // @include animate_example_2();
// }

// @mixin animate_example_1($prev: $now) {
//   $run1: ($run), ($prev);
//   $run2: ($run_slow), ((nth($run1, 1) * 1.44) + nth($run1, 2));
//   $run3: ($run_slow), ((nth($run2, 1) * 0.21) + nth($run2, 2));
//   $run4: ($run_slow), ((nth($run3, 1) * 0.13) + nth($run3, 2));
//   $run5: ($run_slow), ((nth($run4, 1) * 0.08) + nth($run4, 2));
//   $run6: ($run_slow), ((nth($run5, 1) * 0.05) + nth($run5, 2));
//   $run7: ($run * 3), ($prev);
//   .foot .nav-item:nth-child(1) { animation: $run1 $fadein backwards slip_in_b2t }
//   .foot .nav-item:nth-child(2) { animation: $run2 $bounce backwards slip_in_b2t }
//   .foot .nav-item:nth-child(3) { animation: $run3 $bounce backwards slip_in_b2t }
//   .foot .nav-item:nth-child(4) { animation: $run4 $bounce backwards slip_in_b2t }
//   .foot .nav-item:nth-child(5) { animation: $run5 $bounce backwards slip_in_b2t }
//   .foot .nav-item:nth-child(6) { animation: $run6 $bounce backwards slip_in_b2t }
//   .foot .edge-top              { animation: $run7 $fadein backwards slip_in_l2r }

//   $animate_example_1: (nth($run7, 1) + (nth($run7, 2)));
// }

// @function animate_example_2($prev: $now) {
//   $run1: ($run_slower) ($prev);
//   $run2: ($run_slower * 2) ($prev);
//   $run3: ($run) ((list.nth($run2, 1) * 0.89) + list.nth($run2, 2));
//   $run4: ($run) ((list.nth($run3, 1) * 0.34) + list.nth($run3, 2));
//   .overlay-container  { animation: $run1 $fadein backwards fade_in }
//   .overlay-background { animation: $run2 $fadein backwards overlay }
//   .overlay            { animation: $run3 $fadein backwards fade_in }
//   .close              { animation: $run4 $bounce backwards grow_in }

//   $animate_example_2: (list.nth($run4, 1) + (list.nth($run4, 2)));
// }

@mixin animate_stories() {
  @include animate_titles();
  @include animate_dashes();
}

@mixin animate_titles($prev: $run) {
  $run1: ($run), ($prev);
  $run2: ($run), ((nth($run1, 1) * 0.89) + nth($run1, 2));
  $run3: ($run), ((nth($run2, 1) * 0.34) + nth($run2, 2));
  $run4: ($run), ((nth($run3, 1) * 0.21) + nth($run3, 2));
  $run5: ($run), ((nth($run4, 1) * 0.13) + nth($run4, 2));
  $run6: ($run), ((nth($run5, 1) * 0.08) + nth($run5, 2));
  $run7: ($run), ((nth($run6, 1) * 0.05) + nth($run6, 2));
  $run8: ($run), ((nth($run7, 1) * 0.03) + nth($run7, 2));
  .story:nth-child(1) .story-title { animation: $run1 $fadein backwards slip_in_b2t }
  .story:nth-child(2) .story-title { animation: $run2 $fadein backwards slip_in_b2t }
  .story:nth-child(3) .story-title { animation: $run3 $fadein backwards slip_in_b2t }
  .story:nth-child(4) .story-title { animation: $run4 $fadein backwards slip_in_b2t }
  .story:nth-child(5) .story-title { animation: $run5 $fadein backwards slip_in_b2t }
  .story:nth-child(6) .story-title { animation: $run6 $fadein backwards slip_in_b2t }
  .story:nth-child(7) .story-title { animation: $run7 $fadein backwards slip_in_b2t }
  .story:nth-child(8) .story-title { animation: $run8 $fadein backwards slip_in_b2t }

  $animate_titles: (nth($run8, 1) + (nth($run8, 2)));
}

@mixin animate_dashes($prev: 750ms) {
  $run1: ($run), ($prev);
  $run2: ($run), ((nth($run1, 1) * 0.89) + nth($run1, 2));
  $run3: ($run), ((nth($run2, 1) * 0.34) + nth($run2, 2));
  $run4: ($run), ((nth($run3, 1) * 0.21) + nth($run3, 2));
  $run5: ($run), ((nth($run4, 1) * 0.13) + nth($run4, 2));
  $run6: ($run), ((nth($run5, 1) * 0.08) + nth($run5, 2));
  $run7: ($run), ((nth($run6, 1) * 0.05) + nth($run6, 2));
  $run8: ($run), ((nth($run7, 1) * 0.03) + nth($run7, 2));
  .story:nth-child(1) .story-dash { animation: $run1 $fadein backwards fade_in }
  .story:nth-child(2) .story-dash { animation: $run2 $fadein backwards fade_in }
  .story:nth-child(3) .story-dash { animation: $run3 $fadein backwards fade_in }
  .story:nth-child(4) .story-dash { animation: $run4 $fadein backwards fade_in }
  .story:nth-child(5) .story-dash { animation: $run5 $fadein backwards fade_in }
  .story:nth-child(6) .story-dash { animation: $run6 $fadein backwards fade_in }
  .story:nth-child(7) .story-dash { animation: $run7 $fadein backwards fade_in }
  .story:nth-child(8) .story-dash { animation: $run8 $fadein backwards fade_in }

  $animate_dashes: (nth($run8, 1) + (nth($run8, 2)));
}
