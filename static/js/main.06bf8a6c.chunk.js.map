{"version":3,"sources":["bkg.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Link","children","href","className","other","classNames","LinkEx","target","rel","Story","offset","style","Storyline","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"qIAAAA,EAAOC,QAAU,IAA0B,iC,iHCKrCC,G,YAAO,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,UAAcC,EAAY,+CACxD,OACE,qCACED,UAAWE,IAAW,OAAQF,GAC9BD,KAAMA,GACFE,GACJH,KAIAK,EAAS,SAAC,GAA6C,IAA3CL,EAA0C,EAA1CA,SAAUC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,UAAcC,EAAY,+CAC1D,OACE,kBAAC,EAAD,eACED,UAAWE,IAAW,WAAYF,GAClCD,KAAMA,EACNK,OAAO,SACPC,IAAI,uBACAJ,GACJH,IAIAQ,EAAQ,SAAC,GAAgC,IAA9BR,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,KAAMQ,EAAa,EAAbA,OAC/B,OACE,yBAAKP,UAAU,QAAQQ,MAAO,CAAE,KAAQD,IACtC,yBAAKP,UAAU,eACf,yBAAKA,UAAU,eACb,kBAAC,EAAD,CAAQA,UAAU,aAAaD,KAAMA,GAAOD,MAM9CW,EAAY,WAChB,OACE,yBAAKT,UAAU,aACb,kBAAC,EAAD,CAAOO,OAAO,KAAKR,KAAK,yBAAxB,gCADF,IAEE,kBAAC,EAAD,CAAOQ,OAAO,MAAMR,KAAK,oDAAzB,kCAFF,IAGE,kBAAC,EAAD,CAAOQ,OAAO,MAAMR,KAAK,6BAAzB,qBAHF,IAIE,kBAAC,EAAD,CAAOQ,OAAO,QAAQR,KAAK,mCAA3B,yBAJF,IAKE,kBAAC,EAAD,CAAOQ,OAAO,QAAQR,KAAK,2CAA3B,sCALF,IAME,kBAAC,EAAD,CAAOQ,OAAO,QAAQR,KAAK,8BAA3B,gCANF,IAOE,kBAAC,EAAD,CAAOQ,OAAO,MAAMR,KAAK,iCAAzB,mCAPF,IAQE,kBAAC,EAAD,CAAOQ,OAAO,MAAMR,KAAK,mEAAzB,0CARF,MA4DWW,MA/Cf,WACE,OACE,yBAAKV,UAAU,OACb,yBAAKA,UAAU,eACf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,cACf,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,cACf,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,cACf,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,cACf,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,cACf,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,cACf,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,cACf,yBAAKA,UAAU,QAAf,QACA,yBAAKA,UAAU,eAEjB,kBAAC,EAAD,QAGJ,6BAASA,UAAU,WACjB,6BAASA,UAAU,WACjB,+CACA,2BACE,iFACA,8DACA,kBAAC,EAAD,CAAQD,KAAK,iCAAb,QACA,sEACA,kBAAC,EAAD,CAAQA,KAAK,mCAAb,WACA,oCACA,kBAAC,EAAD,CAAQA,KAAK,oCAAb,YACA,wCACA,kBAAC,EAAD,CAAQA,KAAK,kCAAb,UACA,wCChFQY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.06bf8a6c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bkg.f7575d2e.jpg\";","import React from 'react';\nimport classNames from 'classnames';\nimport './bkg.jpg';\nimport './app.scss';\n\nconst Link = ({ children, href, className, ...other }) => {\n  return (\n    <a\n      className={classNames('link', className)}\n      href={href}\n      {...other}\n    >{children}</a>\n  );\n}\n\nconst LinkEx = ({ children, href, className, ...other }) => {\n  return (\n    <Link\n      className={classNames('external', className)}\n      href={href}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      {...other}\n    >{children}</Link>\n  );\n}\n\nconst Story = ({ children, href, offset }) => {\n  return (\n    <div className=\"story\" style={{ 'left': offset }}>\n      <div className=\"story-dash\" />\n      <div className=\"story-title\">\n        <LinkEx className=\"story-link\" href={href}>{children}</LinkEx>\n      </div>\n    </div>\n  );\n}\n\nconst Storyline = () => {\n  return (\n    <div className=\"storyline\">\n      <Story offset=\"5%\" href=\"https://circleci.com/\">Product Designer at CircleCI</Story> {/* aug 2013 */}\n      <Story offset=\"15%\" href=\"https://circleci.com/blog/adaptive-placeholders/\">Invented Adaptive Placeholders</Story> {/* apr 2014 */}\n      <Story offset=\"26%\" href=\"https://precursorapp.com/\">Founded Precursor</Story> {/* jan 2015 */}\n      <Story offset=\"33.5%\" href=\"https://wearesumux.appspot.com/\">UX Engineer at Google</Story> {/* oct 2015 */}\n      <Story offset=\"43.5%\" href=\"https://www.google.com/search?q=flowers\">Shipped product to 2 billion users</Story> {/* jul 2016 */}\n      <Story offset=\"53.5%\" href=\"https://www.paygarden.com/\">Head of Product at PayGarden</Story> {/* may 2017 */}\n      <Story offset=\"59%\" href=\"https://twitch.paygarden.com/\">Created Twitch donation product</Story> {/* nov 2017 */}\n      <Story offset=\"71%\" href=\"https://secure.paygarden.com/pay/site/ltm/privateinternet?uid=1\">Redefined anonymous gift card payments</Story> {/* sep 2018 */}\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"background\" />\n      <div className=\"storytime\">\n        <div className=\"storytime-wrapper\">\n          <div className=\"timeline\">\n            <div className=\"flex-line\" />\n            <div className=\"time\">2014</div>\n            <div className=\"flex-line\" />\n            <div className=\"time\">2015</div>\n            <div className=\"flex-line\" />\n            <div className=\"time\">2016</div>\n            <div className=\"flex-line\" />\n            <div className=\"time\">2017</div>\n            <div className=\"flex-line\" />\n            <div className=\"time\">2018</div>\n            <div className=\"flex-line\" />\n            <div className=\"time\">2019</div>\n            <div className=\"flex-line\" />\n            <div className=\"time\">2020</div>\n            <div className=\"flex-line\" />\n          </div>\n          <Storyline />\n        </div>\n      </div>\n      <section className=\"section\">\n        <article className=\"article\">\n          <h1>I'm Danny King.</h1>\n          <p>\n            <span>I build products for designers and developers. </span>\n            <span>I used to write a lot on my </span>\n            <LinkEx href=\"https://precursorapp.com/blog\">blog</LinkEx>\n            <span> but not so much anymore. Here's my </span>\n            <LinkEx href=\"https://twitter.com/dannykingme\">Twitter</LinkEx>\n            <span>, </span>\n            <LinkEx href=\"https://dribbble.com/dannykingme\">dribbble</LinkEx>\n            <span>, and </span>\n            <LinkEx href=\"https://github.com/dannykingme\">GitHub</LinkEx>\n            <span>.</span>\n          </p>\n        </article>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}